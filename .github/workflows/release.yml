---
name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    environment: deployment
    name: Build release and push to OSSRH
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 11
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE

      - name: Cache Maven Repository
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Configure git
        run: |
          git config --global user.name "${{ secrets.GIT_VERIFIED_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_VERIFIED_USER_EMAIL }}"
          git config --global commit.gpgSign true
          git config --global tag.gpgSign true
          git config --global user.signingkey ${{ secrets.GPG_PRIVATE_KEY_ID }}
          git pull

      - name: Initiate an ssh agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create semantic version value
        id: semver
        uses: paulhatch/semantic-version@v4.0.2
        with:
          branch: master
          tag_prefix: ""
          format: "${major}.${minor}.${patch}"
          short_tags: false

      - name: Create next release iteration
        id: next_iteration
        run: |
          echo "::set-output name=text::$(( ${{ steps.semver.outputs.patch }} + 1 ))-SNAPSHOT"

      - name: Deploy to OSSRH
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_PAT }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: >
          mvn release:prepare -B -ff
          -Dtag=${{ steps.semver.outputs.version }}
          -DreleaseVersion=${{ steps.semver.outputs.version }}
          -DdevelopmentVersion=${{ steps.next_iteration.outputs.text }}
          && mvn release:perform -B -ff

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.semver.outputs.version }}
          title: ${{ steps.semver.outputs.version }}
          prerelease: false

      - name: Dispatch release event for jbang catalog
        uses: peter-evans/repository-dispatch@v1.1.3
        with:
          token: ${{ secrets.EVENT_DISPATCH_PAT }}
          event-type: hebcal-api-released
          repository: TomerFi/jbang-catalog
          client-payload: '{"release": "${{ steps.semver.outputs.version }}"}'

      - name: Tweet new release
        uses: lazy-actions/tweet-action@1.0.1
        env:
          RELEASE_TAG: ${{ steps.semver.outputs.version }}
        with:
          oauth_consumer_key: ${{ secrets.TWITTER_API_KEY }}
          oauth_consumer_secret: ${{ secrets.TWITTER_API_SECRET_KEY }}
          oauth_token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          oauth_token_secret: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          message: |
            ðŸš€ðŸŽ‰ Hebcal-api ${{ env.RELEASE_TAG }} has been released! ðŸŽ‰ðŸš€
            ${{ github.event.repository.html_url }}/releases/tag/${{ env.RELEASE_TAG }}

            #hebcal-java-api

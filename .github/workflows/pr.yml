---
name: Pull request build

on:
  pull_request:
    branches:
      - master

jobs:
  label:
    runs-on: ubuntu-latest
    name: Label pull request
    permissions:
      pull-requests: write
    steps:
      - name: Source checkout
        uses: actions/checkout@v3

      - name: Label if conflicts found
        uses: mschilde/auto-label-merge-conflicts@v2.0
        with:
          CONFLICT_LABEL_NAME: "status: has conflicts"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Label if contains large files
        uses: actionsdesk/lfs-warning@v3.1
        with:
          labelName: "warn: lfs detected"
          filesizelimit: "1mb"

  lint:
    runs-on: ubuntu-latest
    name: Lint project
    permissions:
      pull-requests: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for spelling mistakes
        uses: reviewdog/action-misspell@v1.11
        with:
          locale: "US"
          reporter: github-pr-check
          level: error

      - name: Lint code base
        uses: docker://ghcr.io/github/super-linter:slim-v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          IGNORE_GITIGNORED_FILES: true
          IGNORE_GENERATED_FILES: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_JAVA: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_XML: true
          VALIDATE_YAML: true

  build:
    needs: lint
    runs-on: ubuntu-latest
    name: Build project
    permissions:
      pull-requests: read
    strategy:
      matrix:
        java: [11, 17]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v3.0.0
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}
          cache: maven

      - name: Verify the project and create coverage report
        run: mvn verify jacoco:report -B -ff

      - name: Push test and coverage reports as artifact
        if: ${{ matrix.java == 11 }}
        uses: actions/upload-artifact@v3
        with:
          name: reports
          if-no-files-found: error
          path: |
            ./target/junit-platform/TEST-junit-jupiter.xml
            ./target/site/jacoco/jacoco.xml

  report:
    runs-on: ubuntu-latest
    needs: [build]
    name: Publish tests and coverage reports
    permissions:
      checks: write
      issues: write
      pull-requests: write
    steps:
      - name: Download coverage report from artifacts
        uses: actions/download-artifact@v2
        with:
          name: reports
          path: reports

      - name: Report test summary
        uses: EnricoMi/publish-unit-test-result-action@v1.30
        with:
          test_changes_limit: 0
          files: reports/junit-platform/TEST-junit-jupiter.xml

      - name: Push coverage report
        uses: codecov/codecov-action@v2.1.0
        with:
          file: reports/site/jacoco/jacoco.xml
          fail_ci_if_error: true
